.\" section 1 man page for bug_report.sh
.\"
.\" This man page was first written by Cody Boone Ferguson for the IOCCC
.\" in 2022.
.\"
.\" Humour impairment is not virtue nor is it a vice, it's just plain
.\" wrong: almost as wrong as JSON spec mis-features and C++ obfuscation! :-)
.\"
.\" "Share and Enjoy!"
.\"     --  Sirius Cybernetics Corporation Complaints Division, JSON spec department. :-)
.\"
.TH bug_report.sh 1 "30 January 2023" "bug_report.sh" "IOCCC tools"
.SH NAME
.B bug_report.sh
\- run a series of tests, collecting system information in the process, to help report bugs and issues
.SH SYNOPSIS
.B bug_report.sh
.RB [\| \-h \|]
.RB [\| \-V \|]
.RB [\| \-v
.IR level \|]
.RB [\| \-D
.IR level \|]
.RB [\| \-t \|]
.RB [\| \-x \|]
.RB [\| \-l \|]
.RB [\| \-L
.IR logfile \|]
.RB [\| \-M
.IR make_flags \|]
.SH DESCRIPTION
.B bug_report.sh
runs a series of tests and scripts to gather as much information about your system as possible in order to help with reporting bugs or other issues.
If any step fails it will let you know and recommend that you file an issue at the GitHub issue page, reminding you to attach the log file that the script creates.
If no step fails it will tell you that everything is okay but still informs you that if you feel there is an issue you can report it, also reminding you to attach the log file.
If the
.B \-x
option is specified and no problems were detected the log file will be deleted.
The
.B \-L
.I logfile
option allows one to override the log file name.
This is important for
.BR prep.sh (8).
.SH OPTIONS
.TP
.B \-h
Print help and exit.
.TP
.B \-V
Print version and exit.
.TP
.BI \-v\  level
Set verbosity level to
.I level
(def: 0).
.TP
.B \-t
Disable make actions.
.TP
.B \-x
Delete log file if no warnings and no errors were detected.
.TP
.B \-l
Only write to log file: don't write to stdout.
.TP
.BI \-M\  make_flags
Set make flags for the make actions.
If you specify more than one option do not forget to quote it to prevent the shell from causing problems.
We recommend you to
.B NOT
use this when actually reporting bugs.
This is because it will provide us some very useful information.
Nevertheless it is there for the cases where it's useful.
.SH EXIT STATUS
.TP
0
all tests OK
.TQ
1
failed to create bug report file
.TQ
2
help mode exit or print version mode exit
.TQ
3
invalid command line
.TQ
4
error in function call
.TQ
>=10
at least one check failed
.SH NOTES
.PP
Even if the script exits 0 it does not necessarily mean there is no problem.
If you feel there is a problem that was not detected you may still open an issue on the GitHub page (or email the Judges though this is discouraged as not all tools were created by the Judges for example this tool itself).
The script will tell you how to do this whether there are issues detected or not.
.PP
If all tests are OK it will tell you that all should be okay and you can safely delete the log file.
If the
.B \-x
option is specified and no issues are detected the log file will be deleted.
If any issues are found it will recommend you to report it, reminding you to attach the log in your report.
.SH BUGS
.PP
Right now there are no known bugs except that it cannot possibly account for everything.
Previously there was a bug in this script that made it so that issues detected were not reported.
This is very ironic and amusing since the purpose of the script is to help identify bugs. :\-)
.PP
Nevertheless, if you feel there is an issue with this tool you may open an issue at the GitHub issues page.
Running the script will tell you how to report issues and it would be good if you attach the log file in this report as well.
.PP
Please remember that just because the script reports issues does not mean that there's a bug with the script itself.
Instead it probably is a problem with one of the tools on your system which the script detected and is reporting.
If that is the case it will let you know and tell you how to report that issue.
.PP
Please make sure to attach the bug report to your bug report. :\-)
.PP
The output can seem redundant if it fails because of
.BR hostchk (1)
since it will trigger a warning that tells you to use
.BR hostchk (1)
with more verbosity and also tells you to use
.B bug_report.sh
which tells you to use
.BR hostchk (1).
Sorry in advance if (to use an American English phrase which I will happily use for a pun for a pun not made is a wasted opportunity) this throws you for a loop :\-) but we feel that it's better that the warning is really stressed as it most likely means that you won't be able to use the toolkit to successfully create a valid IOCCC tarball.
But now that you're in the loop it shouldn't even matter! :\-)
.SH EXAMPLES
.PP
Run script:
.sp
.RS
.ft B
 ./bug_report.sh
.ft R
.RE
.PP
Run script, specifying the log file name, making output only go to the log file and making sure it is deleted if no problems are found:
.sp
.RS
.ft B
 ./bug_report.sh -l -L foo.log -x
.ft R
.RE
.SH SEE ALSO
.BR hostchk (1),
.BR prep (8)
